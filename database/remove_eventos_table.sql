-- ==============================================
-- SCRIPT PARA REMOVER TABELA EVENTOS
-- ==============================================
-- Este script remove a tabela 'eventos' e todas suas refer√™ncias
-- Mantendo apenas a tabela 'agendamentos' como padr√£o

-- 1. Remover triggers relacionados √† tabela eventos
DROP TRIGGER IF EXISTS update_eventos_updated_at ON eventos;

-- 2. Remover √≠ndices da tabela eventos
DROP INDEX IF EXISTS idx_eventos_data_inicio;
DROP INDEX IF EXISTS idx_eventos_status;
DROP INDEX IF EXISTS idx_eventos_local_id;
DROP INDEX IF EXISTS idx_eventos_acao_id;

-- 3. Remover a tabela eventos (CASCADE remove depend√™ncias)
DROP TABLE IF EXISTS eventos CASCADE;

-- 4. Verificar se a tabela foi removida
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'eventos') THEN
        RAISE NOTICE '‚ùå Tabela eventos ainda existe';
    ELSE
        RAISE NOTICE '‚úÖ Tabela eventos removida com sucesso';
    END IF;
END $$;

-- 5. Verificar se a tabela agendamentos existe
DO $$
BEGIN
    IF EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'agendamentos') THEN
        RAISE NOTICE '‚úÖ Tabela agendamentos est√° dispon√≠vel';
    ELSE
        RAISE NOTICE '‚ùå Tabela agendamentos n√£o encontrada';
    END IF;
END $$;

-- 6. Mostrar estat√≠sticas das tabelas restantes
SELECT 
    'agendamentos' as tabela,
    COUNT(*) as total_registros
FROM agendamentos
UNION ALL
SELECT 
    'status_agendamento' as tabela,
    COUNT(*) as total_registros
FROM status_agendamento;

-- 7. Coment√°rio final
COMMENT ON TABLE agendamentos IS 'Tabela principal para armazenar agendamentos e eventos da par√≥quia (substitui a tabela eventos)';

RAISE NOTICE 'üéâ Migra√ß√£o conclu√≠da: Tabela eventos removida, usando apenas agendamentos';
